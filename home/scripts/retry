#!/usr/bin/env bash

# This file is based of a gist from Felipe Machado [1]. His script was
# influeced by another gist [2] and a stackover answer [3].
#
# [1] https://gist.github.com/felipou/6fbec22c4e04d3adfae5
# [2] http://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash
# [3] https://gist.github.com/iangreenleaf/279849

function retry() {
  MAX_RETRIES="5" # todo: is this good?

    # Command-line arguments parsing
    while [[ $# -gt 1 ]]
    do
      key="$1"

      case $key in
        -m|--max)
          MAX_RETRIES="$2"
          shift # past argument
          ;;
        *)
          break # unknown option
          ;;
      esac
      shift # past argument or value
    done

    # The command is all remaining arguments
    COMMAND="$*"

    echo "$COMMAND" # show the command we are running

    i=0

    sleep_time=1
    while ! $COMMAND && [[ $i -lt $MAX_RETRIES ]]
    do
      echo "Command failed - retrying in $sleep_time seconds..."
      sleep "$sleep_time"
      i=$((i+1))
      sleep_time=$((sleep_time * 2))
      $COMMAND
    done

    if [ "$i" -eq "$MAX_RETRIES" ]
    then
      echo "Max retries reached"
    fi
    exit 1
  }

if [[ "$#" -eq 0 ]]; then
  echo "A retry command for bash
  Retries the given command up to MAX_RETRIES, with an interval of SLEEP_TIME
  between each retry. Just put it on your bash_profile and be happy :)

  Usage:
  retry [-s SLEEP_TIME] [-m MAX_RETRIES] COMMAND_WITH_ARGUMENTS"
fi

retry "$@"
