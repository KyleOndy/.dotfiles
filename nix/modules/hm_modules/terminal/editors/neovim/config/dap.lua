require("which-key").add({
  { "<leader>d", group = "debug" },
  { "<leader>db", group = "breakpoint" },
  { "<leader>dbb", '<cmd>lua require"dap".toggle_breakpoint()<CR>', desc = "Toggle Breakpoint" },
  {
    "<leader>dbc",
    '<cmd>lua require"dap".set_breakpoint(vim.fn.input("Breakpoint condition: "))<CR>',
    desc = "Breakpoint (condition)",
  },
  {
    "<leader>dbm",
    '<cmd>lua require"dap".set_breakpoint(nil, nil, vim.fn.input("Log point message: "))<CR>',
    desc = "Breakpoint (msg)",
  },
  { "<leader>dr", group = "run" },
  { "<leader>dre", '<cmd>lua require"dap".repl.open()<CR>', desc = "Open REPL" },
  { "<leader>drl", '<cmd>lua require"dap".repl.run_last()<CR>', desc = "Run Last" },
  { "<leader>drr", '<cmd>lua require"dap".continue()<CR>', desc = "Continue / Run" },
  { "<leader>ds", group = "step" },
  { "<leader>dsi", '<cmd>lua require"dap".step_into()<CR>', desc = "Step Into" },
  { "<leader>dso", '<cmd>lua require"dap".step_out()<CR>', desc = "Step Out" },
  { "<leader>dsv", '<cmd>lua require"dap".step_over()<CR>', desc = "Step Over" },
  { "<leader>du", group = "ui" },
  { "<leader>duh", '<cmd>lua require"dap.ui.widgets".hover()<CR>', desc = "Widget hover?" },
  { "<leader>duj", '<cmd>lua require"dap.ui.variables".hover()<CR>', desc = "Hover?" },
  { "<leader>dus", '<cmd>lua require"dap.ui.variables".scopes()<CR>', desc = "Scope?" },
  {
    "<leader>duu",
    "<cmd>lua local widgets=require'dap.ui.widgets';widgets.centered_float(widgets.scopes)<CR>",
    desc = "Floating widget?",
  },
  { "<leader>duv", '<cmd>lua require"dap.ui.variables".visual_hover()<CR>', desc = "Hover Visual?" },
  { "<leader>dv", group = "select" },
  { "<leader>dvb", '<cmd>lua require"telescope".extensions.dap.list_breakpoints{}<CR>', desc = "Select Breakpoint" },
  { "<leader>dvc", '<cmd>lua require"telescope".extensions.dap.commands{}<CR>', desc = "Select Command" },
  { "<leader>dvf", '<cmd>lua require"telescope".extensions.dap.frames{}<CR>', desc = "Select Frame" },
  { "<leader>dvg", '<cmd>lua require"telescope".extensions.dap.configurations{}<CR>', desc = "Select configuration" },
  { "<leader>dvv", '<cmd>lua require"telescope".extensions.dap.variables{}<CR>', desc = "Select Variable" },
})
